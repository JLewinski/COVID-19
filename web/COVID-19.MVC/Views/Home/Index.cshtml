@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    <div class="col">
        <canvas id="stateConfirmedChart" width="400" height="400"></canvas>
    </div>
    <div class="col">
        <canvas id="stateDeathsChart" width="400" height="400"></canvas>
    </div>
    <div class="col">
        <canvas id="percentageChart" width="400" height="400"></canvas>
    </div>
</div>
<div class="row">
    <select id="stateSelect" class="form-control" data-bind="options: selectedCountry.states">
        <option>Alabama</option>
        <option>California</option>
        <option>Colorado</option>
        <option>Florida</option>
        <option>Georgia</option>
        <option>Maryland</option>
        <option>New York</option>
        <option>Ohio</option>
    </select>
    <select id="countrySelect" class="form-control" data-bind="options: countries, optionsText: 'name', value: selectedCountry">
    </select>
    <div class="slidecontainer">
        <label for="offsetRange">Offset <span id="offsetSpan"></span></label>
        <input type="range" min="0" max="30" value="15" class="slider" id="offsetRange" />
    </div>
    <div class="slidecontainer">
        <label for="rangeRange">Range <span id="rangeSpan"></span></label>
        <input type="range" min="1" max="20" value="5" class="slider" id="rangeRange" />
    </div>
</div>

@section Scripts
{
    <partial name="_KnockoutScriptsPartial" />
    <script src="~/lib/chart/Chart.js"></script>
    <script type="text/javascript">
        var colors = [
            'rgb(0,128,0)',
            'rgb(141,182,0)',
            'rgb(0,255,255)',
            'rgb(253,238,0)',
            'rgb(0,127,255)',
            'rgb(0,0,255)',
            'rgb(0,221,221)',
            'rgb(242,101,34)',
            'rgb(12,35,64)',
            'rgb(150,0,24)',
            'rgb(150,75,0)',
            'rgb(0,71,171)',
            'rgb(255,40,0)',
            'rgb(255,0,79)',
            'rgb(255,223,0)',
            'rgb(0,255,0)',
            'rgb(128,0,0)',
            'rgb(0,250,154)',
            'rgb(255,0,0)',
            'rgb(255,103,0)'
        ];
        var self;
        $(() => {
            $.getJSON('@Url.Action("GetCountryList")').done(result => {
                if (!result.success) {
                    console.error('Country: ' + result.errorMessage);
                    return;
                }
                self = {
                    countries: result.countries,
                    selectedCountry: {}
                };
                
                ko.track(self);
                ko.applyBindings(self);
            });
            var dates;
            var confirmedChart;
            var confirmedData;
            var deathChart;
            var deathData;
            var percentageChart;
            function CreateBarPlot(elementId, dates, dataSets, title) {
                var ctx = document.getElementById(elementId);
                return new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: dates,
                        datasets: dataSets
                    },
                    options: {
                        legend: {
                            display: false
                        },
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        },
                        title: {
                            display: true,
                            text: title
                        }
                    }
                });
            }

            function UpdateChart(chart, data, title) {
                chart.data.datasets[0] = data;
                if (title) chart.options.title.text = title;
                chart.update();
            }

            function UpdatePercentageChart() {
                var offset = 1 * $('#offsetRange').val();
                var range = 1 * $('#rangeRange').val();
                $('#offsetSpan').text('(' + offset + ')');
                $('#rangeSpan').text('(' + range + ')');
                var percentageData = [];
                var tempDates = [];
                var dataIndex = 0;
                confirmedData.forEach((x, index) => {
                    var confirmed = 0;
                    var deaths = 0;

                    if (range + offset >= deathData.length) {
                        return;
                    }

                    for (var i = 0; i < range; i++) {
                        confirmed += confirmedData[index + i];
                        deaths += deathData[index + i + offset];
                    }
                    var tempData = confirmed ? deaths / confirmed : deaths;

                    if (tempData || percentageData.length) {
                        percentageData[dataIndex] = tempData;
                        tempDates[dataIndex++] = dates[index];// dates[index + offset + range / 2] ?? dates[index + offset + range / 2 - 0.5];
                    }
                });

                var popped = percentageData.pop();
                while (!popped && percentageData.length) {
                    tempDates.pop();
                    popped = percentageData.pop();
                }
                percentageData.push(popped);

                if (!percentageChart) {
                    var percentage = {
                        data: percentageData,
                        backgroundColor: colors[0],
                        borderColor: colors[0]
                    };
                    percentageChart = CreateBarPlot('percentageChart', tempDates, [percentage], 'Death Percentage');
                    percentageChart.options.scales.yAxes[0].ticks.max = 0.25;
                    percentageChart.update();
                }
                else {
                    percentageChart.data.labels = tempDates;
                    percentageChart.data.datasets[0].data = percentageData;
                    percentageChart.update();
                }
            }

            function GetStateData(stateName) {
                $.getJSON('@Url.Action("GetStateData")?state=' + stateName + '&country=' + self.selectedCountry.name).done(result => {
                    if (!result.success) {
                        console.error('State: ' + result.errorMessage);
                        return;
                    }
                    dates = result.dates;
                    confirmedData = result.confirmedCases.data;
                    var confirmed = {
                        data: confirmedData,
                        backgroundColor: colors[7],
                        borderColor: colors[7]
                    };
                    if (!confirmedChart) {
                        confirmedChart = CreateBarPlot('stateConfirmedChart', result.dates, [confirmed], stateName + ' New Confirmed Cases');
                    } else {
                        UpdateChart(confirmedChart, confirmed, stateName + ' New Confirmed Cases');
                    }

                    deathData = result.deaths.data;
                    var deaths = {
                        data: deathData,
                        backgroundColor: colors[8],
                        borderColor: colors[8]
                    };
                    if (!deathChart) {
                        deathChart = CreateBarPlot('stateDeathsChart', result.dates, [deaths], stateName + ' New Deaths');
                    } else {
                        UpdateChart(deathChart, deaths, stateName + ' New Deaths');
                    }

                    UpdatePercentageChart();
                });
            }

            $('select').on('change', () => {
                GetStateData($('#stateSelect').val());
            });

            $('.slider').on('change', () => { UpdatePercentageChart(); });
        });
    </script>
}