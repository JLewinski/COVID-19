#pragma checksum "C:\Users\jdlew\Documents\GitHub\COVID-19\web\COVID-19.MVC\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ab8abe4d8ab561998b91386fac32bc05fd1c602c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\jdlew\Documents\GitHub\COVID-19\web\COVID-19.MVC\Views\_ViewImports.cshtml"
using COVID_19.MVC;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\jdlew\Documents\GitHub\COVID-19\web\COVID-19.MVC\Views\_ViewImports.cshtml"
using COVID_19.MVC.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ab8abe4d8ab561998b91386fac32bc05fd1c602c", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"95ac057397a8a18bfbcec8760673c15019af9eb0", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/chart/Chart.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\jdlew\Documents\GitHub\COVID-19\web\COVID-19.MVC\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""text-center"">
    <h1 class=""display-4"">Welcome</h1>
    <p>Learn about <a href=""https://docs.microsoft.com/aspnet/core"">building Web apps with ASP.NET Core</a>.</p>
</div>
<div class=""row"">
    <div class=""col"">
        <canvas id=""confirmedCasesChart"" width=""400"" height=""400""></canvas>
    </div>
    <div class=""col"">
        <canvas id=""deathsChart"" width=""400"" height=""400""></canvas>
    </div>
</div>
<div class=""row"">
    <div class=""col"">
        <canvas id=""confirmedCasesChartUS"" width=""400"" height=""400""></canvas>
    </div>
    <div class=""col"">
        <canvas id=""deathsChartUS"" width=""400"" height=""400""></canvas>
    </div>
</div>
<div class=""form-group"">
    <select id=""stateSelect"" class=""form-control"">
        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab8abe4d8ab561998b91386fac32bc05fd1c602c4609", async() => {
                WriteLiteral("Alabama");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab8abe4d8ab561998b91386fac32bc05fd1c602c5576", async() => {
                WriteLiteral("California");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab8abe4d8ab561998b91386fac32bc05fd1c602c6546", async() => {
                WriteLiteral("Colorado");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab8abe4d8ab561998b91386fac32bc05fd1c602c7514", async() => {
                WriteLiteral("Florida");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab8abe4d8ab561998b91386fac32bc05fd1c602c8481", async() => {
                WriteLiteral("Georgia");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab8abe4d8ab561998b91386fac32bc05fd1c602c9448", async() => {
                WriteLiteral("Maryland");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab8abe4d8ab561998b91386fac32bc05fd1c602c10416", async() => {
                WriteLiteral("New York");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab8abe4d8ab561998b91386fac32bc05fd1c602c11385", async() => {
                WriteLiteral("Ohio");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    </select>
    <button id=""getStateInfoButton"" class=""btn btn-primary"">Run</button>
</div>
<div class=""row"">
    <div class=""col"">
        <canvas id=""stateConfirmedChart"" width=""400"" height=""400""></canvas>
    </div>
    <div class=""col"">
        <canvas id=""stateDeathsChart"" width=""400"" height=""400""></canvas>
    </div>
</div>

");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab8abe4d8ab561998b91386fac32bc05fd1c602c12808", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script type=""text/javascript"">
        var colors = [
            'rgb(0,128,0)',
            'rgb(141,182,0)',
            'rgb(0,255,255)',
            'rgb(253,238,0)',
            'rgb(0,127,255)',
            'rgb(0,0,255)',
            'rgb(0,221,221)',
            'rgb(242,101,34)',
            'rgb(12,35,64)',
            'rgb(150,0,24)',
            'rgb(150,75,0)',
            'rgb(0,71,171)',
            'rgb(255,40,0)',
            'rgb(255,0,79)',
            'rgb(255,223,0)',
            'rgb(0,255,0)',
            'rgb(128,0,0)',
            'rgb(0,250,154)',
            'rgb(255,0,0)',
            'rgb(255,103,0)'
        ];
        $(() => {

            $('#getStateInfoButton').click(() => {
                GetStateData($('#stateSelect').val());
            });

            function GetStateData(stateName) {
                $.getJSON('");
#nullable restore
#line 80 "C:\Users\jdlew\Documents\GitHub\COVID-19\web\COVID-19.MVC\Views\Home\Index.cshtml"
                      Write(Url.Action("GetStateData"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"?state=' + stateName).done(result => {
                    if (!result.success) {
                        console.error(result.errorMessage);
                        return;
                    }
                    
                    var confirmed = {
                        data: result.confirmedCases.data,
                        backgroundColor: colors[7],
                        borderColor: colors[7]
                    };
                    ShowLinePlot('stateConfirmedChart', result.dates, [confirmed], stateName + ' New Confirmed Cases');

                    var deaths = {
                        data: result.deaths.data,
                        backgroundColor: colors[9],
                        borderColor: colors[9]
                    };
                    ShowLinePlot('stateDeathsChart', result.dates, [deaths], stateName + ' New Deaths');
                });
            }

            function ShowLinePlot(elementId, dates, dataSets, title) {
                var ctx = d");
                WriteLiteral(@"ocument.getElementById(elementId);
                new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: dates,
                        datasets: dataSets
                    },
                    options: {
                        legend: {
                            display: false
                        },
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        },
                        title: {
                            display: true,
                            text: title
                        }
                    }
                });
            }

            $.getJSON('");
#nullable restore
#line 129 "C:\Users\jdlew\Documents\GitHub\COVID-19\web\COVID-19.MVC\Views\Home\Index.cshtml"
                  Write(Url.Action("GetAllData"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"').done(result => {
                if (!result.success) {
                    console.log(result.library);
                    result.library.dates = result.library.dates.map(x => {
                        var date = new Date(x);
                        return date.toLocaleDateString();
                    });
                    var tempRes = result;
                    var dataSets = [];
                    const chartIds = ['confirmedCasesChart', 'confirmedCasesChartUS', 'deathsChart', 'deathsChartUS']
                    const keys = Object.keys(result.library.data);
                    keys.forEach((key, keyIndex) => {
                        var data = [];
                        result.library.data[key] = result.library.data[key].filter(d => d.country == ""US"" && (d.state == """" || d.state == ""Alabama""));
                        result.library.data[key].forEach((x, dataIndex) => {
                            var label = x.key ? x.key : x.state ? (x.state + ' ' + x.country) : x.country;
 ");
                WriteLiteral(@"                           var currentData = x.data;
                            var total = 0;
                            currentData.forEach((d, i) => {
                                var tempTotal = currentData[i];
                                currentData[i] -= total;
                                if (currentData[i] < 0) {
                                    currentData[i] = 0;
                                }
                                total = tempTotal;
                            });
                            var temp = {
                                label: label,
                                data: currentData,
                                backgroundColor: colors[dataIndex % colors.length],
                                borderColor: colors[dataIndex & colors.length]
                            };
                            data.push(temp);
                        });

                        var ctx = document.getElementById(chartIds[keyIndex]);
           ");
                WriteLiteral(@"             new Chart(ctx, {
                            type: 'line',
                            data: {
                                labels: result.library.dates,
                                datasets: data
                            },
                            options: {
                                legend: {
                                    display: false
                                },
                                scales: {
                                    yAxes: [{
                                        ticks: {
                                            beginAtZero: true
                                        }
                                    }]
                                },
                                title: {
                                    display: true,
                                    text: key
                                }
                            }
                        });

                        dataSets.push(d");
                WriteLiteral("ata);\r\n                    });\r\n                } else {\r\n                    //console.error(result.errorMessage);\r\n                }\r\n            });\r\n        });\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
